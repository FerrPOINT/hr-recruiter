# =============================================================================
# HR Recruiter Backend - Docker Compose Configuration
# =============================================================================
# 
# Этот файл настраивает полную инфраструктуру для HR Recruiter API:
# - PostgreSQL: основная база данных
# - Redis: кэширование и сессии
# - Spring Boot App: основное приложение
# - Whisper: транскрибация аудио
# - Nginx: обратный прокси (опционально)
# - Prometheus + Grafana: мониторинг (опционально)
#
# КОМАНДЫ ДЛЯ ЗАПУСКА:
# docker-compose up -d                    # Запустить все сервисы в фоне
# docker-compose up -d postgres redis     # Запустить только БД и кэш
# docker-compose up app                   # Запустить приложение с логами
# docker-compose down                     # Остановить все сервисы
# docker-compose down -v                  # Остановить и удалить volumes (ОСТОРОЖНО!)
# docker-compose logs -f app              # Смотреть логи приложения
# docker-compose restart app              # Перезапустить приложение
# docker-compose ps                       # Статус всех сервисов
#
# СОХРАНЕНИЕ ДАННЫХ:
# Все данные сохраняются в папке ./data/ на хосте:
# - ./data/postgres/     - данные PostgreSQL
# - ./data/redis/        - данные Redis
# - ./data/prometheus/   - метрики Prometheus
# - ./data/grafana/      - дашборды Grafana
#
# ЛОГИ И РОТАЦИЯ:
# - Логи ротируются автоматически (max 100MB, 3 файла)
# - Данные Prometheus хранятся 7 дней
# - Redis AOF файлы ограничены 1GB
# - PostgreSQL WAL файлы ограничены 4GB
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # PostgreSQL - Основная база данных
  # =============================================================================
  # Хранит все данные приложения: пользователи, вакансии, кандидаты, интервью
  # Данные сохраняются в ./data/postgres/ и не теряются при перезапуске
  # 
  # НАСТРОЙКИ ПРОИЗВОДИТЕЛЬНОСТИ:
  # - shared_buffers: 256MB - память для кэширования данных
  # - effective_cache_size: 1GB - предполагаемый размер кэша ОС
  # - work_mem: 4MB - память для операций сортировки/соединения
  # - max_connections: 200 - максимальное количество подключений
  # - checkpoint_completion_target: 0.9 - плавная запись на диск
  # 
  # ОГРАНИЧЕНИЯ ДАННЫХ:
  # - max_wal_size: 4GB - максимальный размер WAL файлов
  # - log_rotation_age: 1d - ротация логов каждый день
  # - log_rotation_size: 100MB - ротация при достижении 100MB
  # =============================================================================
  postgres:
    image: postgres:16-alpine
    container_name: hr-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: hr_recruiter
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: hr_password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # =============================================================================
  # Redis - Кэширование и сессии
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: hr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # =============================================================================
  # Whisper - Транскрибация аудио
  # =============================================================================
  whisper:
    image: onerahmet/openai-whisper-asr-webservice:latest
    container_name: hr-whisper
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - ASR_ENGINE=openai_whisper
      - ASR_MODEL=medium
      - ASR_DEVICE=cpu
      - ASR_LANGUAGE=ru
      - ASR_TEMPERATURE=0.0

  # =============================================================================
  # Spring Boot Application
  # =============================================================================
  app:
    build: .
    container_name: hr-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/hr_recruiter
      - SPRING_DATASOURCE_USERNAME=hr_user
      - SPRING_DATASOURCE_PASSWORD=hr_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      # AI Service API Keys
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      # Whisper Configuration
      - APP_AI_TRANSCRIPTION_WHISPER_URL=http://whisper:9000
      - APP_AI_TRANSCRIPTION_WHISPER_LANGUAGE=ru
      - APP_AI_TRANSCRIPTION_WHISPER_MODEL=medium
      - APP_AI_TRANSCRIPTION_WHISPER_TIMEOUT=60000
      - APP_AI_TRANSCRIPTION_WHISPER_WORD_TIMESTAMPS=true
      - APP_AI_TRANSCRIPTION_WHISPER_CONDITION_ON_PREVIOUS_TEXT=false
      - APP_AI_TRANSCRIPTION_WHISPER_TEMPERATURE=0.0
    depends_on:
      - postgres
      - redis
      - whisper
    volumes:
      - ./logs:/app/logs

volumes:
  pgdata:
  redisdata:

# =============================================================================
# Networks - Сетевая изоляция
# =============================================================================
# Все сервисы подключены к одной сети для внутреннего взаимодействия
# =============================================================================
networks:
  hr-recruiter-network:
    driver: bridge
